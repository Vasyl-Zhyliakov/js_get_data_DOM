{"version":3,"sources":["scripts/main.js"],"names":["population","document","querySelectorAll","popValue","character","push","getNumber","innerText","string","number","i","length","total","reduce","sum","x","average","getNewFormat","transform","toString","split","join","querySelector"],"mappings":";AAAA,aAqCA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAnCA,IAmCA,EAnCMA,EAAaC,SAASC,iBAAiB,eACvCC,EAAW,GAEOH,EAAAA,EAAAA,GAgCxB,IAhCoC,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAzBI,IAAAA,EAAyB,EAAA,MAClCD,EAASE,KAAKC,EAAUF,EAAUG,aA+BpC,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IA5BA,SAASD,EAAUE,GAGZ,IAFDC,IAAAA,EAAS,GAEJC,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IACf,MAAdF,EAAOE,KACTD,GAAUD,EAAOE,IAId,OAACD,EAGV,IAAMG,EAAQT,EAASU,OAAO,SAACC,EAAKC,GAAMD,OAAAA,EAAMC,GAAG,GAC7CC,EAAUJ,EAAQT,EAASQ,OAEjC,SAASM,EAAaR,GAGf,IAFCS,IAAAA,EAAYT,EAAOU,WAAWC,MAAM,IAEjCV,EAAIQ,EAAUP,OAAS,EAAGD,GAAK,EAAGA,KACpCQ,EAAUP,OAASD,GAAK,GAAM,GAAW,IAANA,IACtCQ,EAAUR,GAAK,IAAMQ,EAAUR,IAI5BQ,OAAAA,EAAUG,KAAK,IAGxBpB,SAASqB,cAAc,qBAAqBf,UAAYU,EAAaL,GACrEX,SAASqB,cAAc,uBAAuBf,UAAYU,EAAaD","file":"main.13dd0142.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst population = document.querySelectorAll('.population');\nconst popValue = [];\n\nfor (const character of population) {\n  popValue.push(getNumber(character.innerText));\n}\n\nfunction getNumber(string) {\n  let number = '';\n\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] !== ',') {\n      number += string[i];\n    }\n  }\n\n  return +number;\n}\n\nconst total = popValue.reduce((sum, x) => sum + x, 0);\nconst average = total / popValue.length;\n\nfunction getNewFormat(number) {\n  const transform = number.toString().split('');\n\n  for (let i = transform.length - 1; i >= 0; i--) {\n    if ((transform.length - i) % 3 === 0 && i !== 0) {\n      transform[i] = ',' + transform[i];\n    }\n  }\n\n  return transform.join('');\n}\n\ndocument.querySelector('.total-population').innerText = getNewFormat(total);\ndocument.querySelector('.average-population').innerText = getNewFormat(average);\n"]}